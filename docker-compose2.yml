 
version: "2.4"

services:
  rocketchat:
    image: rocketchat/rocket.chat:latest
    command: >
      bash -c
        "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    restart: unless-stopped
    volumes:
      - ${MYNAME}-rocketchat_app-uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://${DOMAIN}:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
#       - MAIL_URL=smtp://smtp.email
#       - HTTP_PROXY=http://proxy.domain.com
#       - HTTPS_PROXY=http://proxy.domain.com
    depends_on:
      - mongo
    ports:
      - 3000:3000
    networks:
      ${MYNAME}:
    labels:
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host: ${DOMAIN}"

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
     - ${MYNAME}-mongo_data-db:/data/db
     - ${MYNAME}-mongo_data-configdb:/data/configdb
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
      - "traefik.enable=false"
    networks:
      ${MYNAME}:


  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    image: mongo:4.0
    volumes:
     - ${MYNAME}-mongo-init-replica_data-db:/data/db
     - ${MYNAME}-mongo-init-replica_data-configdb:/data/configdb

    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo
    networks:
      ${MYNAME}: 

networks:
  ${MYNAME}:
